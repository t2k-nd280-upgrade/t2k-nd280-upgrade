# Sets some default verbose
/control/verbose 1

# Particle Max Step Size 
/testem/stepMax 1 mm

# Set the magnetic field
/field/setStepperType 4
/field/setMinStep 0.1 mm
/field/setField 0.0001 0 0 tesla
/field/update

/db/set/saveAllTraj 1
/db/set/saveAllHits 1

# Set the particle generator: "Generator" (NEUT or GENIE is not specified here) or "ParticleGun"
/generator/type Generator
#/generator/type ParticleGun
        
# Set the particle gun 
/gun/particle pi-
#/gun/energy 800 MeV  # kinetic energy
/gun/momentum  0 0 0.75 GeV # momentum
/gun/direction 0 0 1 # momentum direction     
/gun/position  0 0 -2907 mm  # starting position
/gun/number   1      # number of particles

#/generator/typegun BeamTest
/generator/typepos PrototypeGaus

# Disable auto refresh and quieten vis messages whilst scene and
# trajectories are established:
#/vis/viewer/set/autoRefresh false
#/vis/verbose errors


# Use this open statement to create a .wrl file suitable for
# viewing in a VRML viewer:
#/vis/open VRML2FILE
# Draw geometry:
#/vis/drawVolume

# Specify view angle:
/vis/viewer/set/viewpointThetaPhi 0. 0.

# Specify zoom value:
/vis/viewer/zoom 1.4

# Specify style (surface or wireframe):
#/vis/viewer/set/style wireframe

# Draw coordinate axes:
#/vis/scene/add/axes 0 0 0 1 m auto true
#/vis/scene/add/axes

# Draw smooth trajectories at end of event, showing trajectory points
# as markers 2 pixels wide:
/vis/scene/add/trajectories smooth
/vis/modeling/trajectories/create/drawByCharge
/vis/modeling/trajectories/drawByCharge-0/default/setDrawStepPts false #true
/vis/modeling/trajectories/drawByCharge-0/default/setStepPtsSize 1
# (if too many tracks cause core dump => /tracking/storeTrajectory 0)

# Draw hits at end of event:
#/vis/scene/add/hits

# To draw only gammas:
/vis/filtering/trajectories/create/particleFilter
/vis/filtering/trajectories/particleFilter-0/add gamma

# To invert the above, drawing all particles except gammas,
# keep the above two lines but also add:
/vis/filtering/trajectories/particleFilter-0/invert true

# Many other options are available with /vis/modeling and /vis/filtering.
# For example, to select colour by particle ID:
#/vis/modeling/trajectories/create/drawByParticleID
#/vis/modeling/trajectories/drawByParticleID-0/set e- blue

# To superimpose all of the events from a given run:
#/vis/scene/endOfEventAction accumulate

# Re-establish auto refreshing and verbosity:
/vis/viewer/set/autoRefresh true
/vis/verbose warnings

# For file-based drivers, use this to create an empty detector view:
#/vis/viewer/flush
